# Python bytecode 2.6 (decompiled from Python 2.7)
# Embedded file name: scripts/client/messenger/gui/Scalefrom/__init__.py
# Compiled at: 2018-11-29 14:33:44
MESSENGER_BATTLE_SWF_FILE = 'battle_messenger.swf'
import enumerations
C_COMMANDS = enumerations.Enumeration('Common messenger commands', [('RefreshUI', lambda : 'Messenger.Lobby.RefreshUI'),
 ('PopulateUI', lambda : 'Messenger.Lobby.PopulateUI'),
 ('CreateChannel', lambda : 'Messenger.CreateChannel.RequestCreate'),
 ('CreateChannelClientError', lambda : 'Messenger.CreateChannel.ClientError'),
 ('JoinToChannel', lambda : 'Messenger.JoinToChannel'),
 ('ConnectToSecureChannel', lambda : 'Messenger.ConnectToSecureChannel'),
 ('AlertReceived', lambda : 'Messenger.AlertReceived'),
 ('RequestUserInfo', lambda : 'Messenger.UserInfo.Request'),
 ('ReceivedUserInfo', lambda : 'Messenger.UserInfo.Received'),
 ('ReceivedUserInfoFailed', lambda : 'Messenger.UserInfo.ReceivedFailed'),
 ('RequestVehicleStat', lambda : 'Messenger.UserInfo.RequestVehicleStat'),
 ('ReceivedVehicleStat', lambda : 'Messenger.UserInfo.ReceivedVehicleStat'),
 ('ReceivedAchievementsStat', lambda : 'Messenger.UserInfo.ReceivedAchievementsStat'),
 ('ReceivedClanEmblem', lambda : 'Messenger.UserInfo.ReceivedClanEmblem')], instance=enumerations.CallabbleEnumItem)
LIST_DP_TCOMMANDS = enumerations.Enumeration('List commands template', [('RequestLength', lambda prefix: '%s.RequestLength' % prefix),
 ('RequestItemAt', lambda prefix: '%s.RequestItemAt' % prefix),
 ('RequestItemRange', lambda prefix: '%s.RequestItemRange' % prefix),
 ('RefreshList', lambda prefix: '%s.RefreshList' % prefix)], instance=enumerations.CallabbleEnumItem)
WP_COMMANDS = enumerations.Enumeration('Messenger window persist commands', [('RequestChannelsPersistents', lambda : 'Messenger.Windows.Channels.RequestPersistents'),
 ('SetChannelPersistent', lambda : 'Messenger.Windows.Channels.SetPersistent'),
 ('RequestManagementPersistents', lambda : 'Messenger.Windows.Management.RequestPersistents'),
 ('SetManagementPersistent', lambda : 'Messenger.Windows.Management.SetPersistent'),
 ('SetEnableStorePersistents', lambda : 'Messenger.Windows.SetEnableStorePersistents')], instance=enumerations.CallabbleEnumItem)
JCH_COMMANDS = enumerations.Enumeration('Joined channel list commands', [('ListRecieved', lambda : 'Messenger.JoinedChannels.ListRecieved'),
 ('RefreshList', lambda : 'Messenger.JoinedChannels.RefreshList'),
 ('ClearList', lambda : 'Messenger.JoinedChannels.ClearList'),
 ('RemoveChannel', lambda : 'Messenger.JoinedChannels.RemoveChannel'),
 ('RequestLength', lambda : 'Messenger.JoinedChannels.RequestLength'),
 ('RequestItemRange', lambda : 'Messenger.JoinedChannels.RequestItemRange'),
 ('WaitActivation', lambda : 'Messenger.JoinedChannels.WaitActivation'),
 ('ChannelActivated', lambda : 'Messenger.JoinedChannels.ChannelActivated'),
 ('LeaveChannel', lambda : 'Messenger.JoinedChannels.LeaveChannel'),
 ('GhangeChannelName', lambda : 'Messenger.JoinedChannels.GhangeChannelName'),
 ('OpenChannelPage', lambda : 'Messenger.JoinedChannels.OpenChannelPage'),
 ('CloseChannelPage', lambda : 'Messenger.JoinedChannels.CloseChannelPage'),
 ('RequestChannelData', lambda : 'Messenger.JoinedChannels.RequestChannelData')], instance=enumerations.CallabbleEnumItem)
CHMB_COMMANDS = enumerations.Enumeration('Channel member list commands', [('RefreshList', lambda : 'Messenger.ChannelMembers.RefreshList'), ('RequestLength', lambda : 'Messenger.ChannelMembers.RequestLength'), ('RequestItemRange', lambda : 'Messenger.ChannelMembers.RequestItemRange')], instance=enumerations.CallabbleEnumItem)
CHMS_COMMANDS = enumerations.Enumeration('Channel message history commands', [('CheckCooldownPeriod', lambda : 'Messenger.ChannelMessages.CheckCooldownPeriod'),
 ('SendMessage', lambda : 'Messenger.ChannelMessages.SendMessage'),
 ('RecieveMessage', lambda : 'Messenger.ChannelMessages.RecieveMessage'),
 ('RequestMessageHistory', lambda : 'Messenger.ChannelMessages.RequestMessageHistory')], instance=enumerations.CallabbleEnumItem)
SQUAD_CH_COMMANDS = enumerations.Enumeration('Specific commands for squad channel', [('InvalidateMemberList', lambda : 'Messenger.SquadChannel.InvalidateMemberList'),
 ('RefreshMemberList', lambda : 'Messenger.SquadChannel.RefreshMemberList'),
 ('SetPlayerRoles', lambda : 'Messenger.SquadChannel.SetPlayerRoles'),
 ('KickPlayer', lambda : 'Messenger.SquadChannel.KickPlayer'),
 ('Ready', lambda : 'Messenger.SquadChannel.Ready'),
 ('Leave', lambda : 'Messenger.SquadChannel.Leave'),
 ('OpenInvitationsWindow', lambda : 'Messenger.SquadChannel.OpenInvitationsWindow'),
 ('IsVehicleReady', lambda : 'Messenger.SquadChannel.IsVehicleReady'),
 ('SetVehicleReady', lambda : 'Messenger.SquadChannel.SetVehicleReady')], instance=enumerations.CallabbleEnumItem)
TEAM_CH_COMMANDS = enumerations.Enumeration('Specific commands for team channel', [('InvalidateMemberList', lambda : 'Messenger.TeamChannel.InvalidateMemberList'),
 ('RefreshMemberList', lambda : 'Messenger.TeamChannel.RefreshMemberList'),
 ('SetPlayerRoles', lambda : 'Messenger.TeamChannel.SetPlayerRoles'),
 ('KickPlayer', lambda : 'Messenger.TeamChannel.KickPlayer'),
 ('AssignPlayer', lambda : 'Messenger.TeamChannel.AssignMember'),
 ('UnAssignPlayer', lambda : 'Messenger.TeamChannel.UnassignMember'),
 ('OpenInvitationsWindow', lambda : 'Messenger.TeamChannel.OpenInvitationsWindow'),
 ('CloseInvitationsWindow', lambda : 'Messenger.TeamChannel.CloseInvitationsWindow'),
 ('ChangeOpenState', lambda : 'Messenger.TeamChannel.ChangeOpenState'),
 ('ChangeComment', lambda : 'Messenger.TeamChannel.ChangeComment'),
 ('ChangeDivision', lambda : 'Messenger.TeamChannel.ChangeDivision'),
 ('Ready', lambda : 'Messenger.TeamChannel.Ready'),
 ('Leave', lambda : 'Messenger.TeamChannel.Leave'),
 ('RefreshList', lambda : 'Messenger.TeamChannel.RefreshList'),
 ('CreateTeam', lambda : 'Messenger.TeamChannel.CreateTeam'),
 ('CreateEnable', lambda : 'Messenger.TeamChannel.CreateEnable'),
 ('GetPlayers', lambda : 'Messenger.TeamChannel.GetPlayers'),
 ('SetDivisions', lambda : 'Messenger.TeamChannel.SetDivisions'),
 ('JoinTeam', lambda : 'Messenger.TeamChannel.JoinTeam'),
 ('OpenWindow', lambda : 'Messenger.TeamChannel.openWindow'),
 ('IsVehicleReady', lambda : 'Messenger.TeamChannel.IsVehicleReady'),
 ('SetVehicleReady', lambda : 'Messenger.TeamChannel.SetVehicleReady'),
 ('LockReadyButton', lambda : 'Messenger.TeamChannel.LockReadyButton'),
 ('UpdateDivisions', lambda : 'Messenger.TeamChannel.UpdateDivisions')], instance=enumerations.CallabbleEnumItem)
BS_CH_COMMANDS = enumerations.Enumeration('Specific commands for battle sessions channel', [('InvalidateMemberList', lambda : 'Messenger.BSChannel.InvalidateMemberList'),
 ('RefreshMemberList', lambda : 'Messenger.BSChannel.RefreshMemberList'),
 ('SetPlayerRoles', lambda : 'Messenger.BSChannel.SetPlayerRoles'),
 ('SetStartTime', lambda : 'Messenger.BSChannel.SetStartTime'),
 ('KickPlayer', lambda : 'Messenger.BSChannel.KickPlayer'),
 ('AssignPlayer', lambda : 'Messenger.BSChannel.AssignMember'),
 ('UnAssignPlayer', lambda : 'Messenger.BSChannel.UnassignMember'),
 ('OpenInvitationsWindow', lambda : 'Messenger.BSChannel.OpenInvitationsWindow'),
 ('CloseInvitationsWindow', lambda : 'Messenger.BSChannel.CloseInvitationsWindow'),
 ('Ready', lambda : 'Messenger.BSChannel.Ready'),
 ('Leave', lambda : 'Messenger.BSChannel.Leave'),
 ('RefreshList', lambda : 'Messenger.BSChannel.RefreshList'),
 ('GetPlayers', lambda : 'Messenger.BSChannel.GetPlayers'),
 ('Join', lambda : 'Messenger.BSChannel.JoinTeam'),
 ('OpenWindow', lambda : 'Messenger.BSChannel.openWindow'),
 ('IsVehicleReady', lambda : 'Messenger.BSChannel.IsVehicleReady'),
 ('SetVehicleReady', lambda : 'Messenger.BSChannel.SetVehicleReady')], instance=enumerations.CallabbleEnumItem)
BTMS_COMMANDS = enumerations.Enumeration('Battle messenger commands', [('ChannelsInit', lambda : 'Messenger.Battle.ChannelsInit'),
 ('CheckCooldownPeriod', lambda : 'Messenger.Battle.CheckCooldownPeriod'),
 ('SendMessage', lambda : 'Messenger.Battle.SendMessage'),
 ('RecieveMessage', lambda : 'Messenger.Battle.RecieveMessage'),
 ('ClearMessages', lambda : 'Messenger.Battle.ClearMessages'),
 ('PopulateUI', lambda : 'Messenger.Battle.PopulateUI'),
 ('RefreshUI', lambda : 'Messenger.Battle.RefreshUI'),
 ('ChangeFocus', lambda : 'Messenger.Battle.ChangeFocus'),
 ('ShowActionFailureMessage', lambda : 'Messenger.Battle.ShowActionFailureMesssage'),
 ('AddToFriends', lambda : 'Battle.UsersRoster.AddToFriends'),
 ('RemoveFromFriends', lambda : 'Battle.UsersRoster.RemoveFromFriends'),
 ('AddToIgnored', lambda : 'Battle.UsersRoster.AddToIgnored'),
 ('RemoveFromIgnored', lambda : 'Battle.UsersRoster.RemoveFromIgnored'),
 ('AddMuted', lambda : 'Battle.UsersRoster.AddMuted'),
 ('RemoveMuted', lambda : 'Battle.UsersRoster.RemoveMuted')], instance=enumerations.CallabbleEnumItem)
UR_COMMANDS = enumerations.Enumeration('Users roster commands', [('FriendsRequestLength', lambda : 'Messenger.Friends.RequestLength'),
 ('FriendsRequestItemAt', lambda : 'Messenger.Friends.RequestItemAt'),
 ('FriendsRequestItemRange', lambda : 'Messenger.Friends.RequestItemRange'),
 ('FriendsRefreshList', lambda : 'Messenger.Friends.RefreshList'),
 ('IgnoredRequestLength', lambda : 'Messenger.Ignored.RequestLength'),
 ('IgnoredRequestItemRange', lambda : 'Messenger.Ignored.RequestItemRange'),
 ('IgnoredRefreshList', lambda : 'Messenger.Ignored.RefreshList'),
 ('MutedRequestLength', lambda : 'Messenger.Muted.RequestLength'),
 ('MutedRequestItemRange', lambda : 'Messenger.Muted.RequestItemRange'),
 ('MutedRefreshList', lambda : 'Messenger.Muted.RefreshList'),
 ('ClanRequestLength', lambda : 'Messenger.ClanMembers.RequestLength'),
 ('ClanRequestItemRange', lambda : 'Messenger.ClanMembers.RequestItemRange'),
 ('ClanRefreshList', lambda : 'Messenger.ClanMembers.RefreshList'),
 ('AddToFriends', lambda : 'Messenger.UsersRoster.AddToFriends'),
 ('SetMuted', lambda : 'Messenger.UsersRoster.SetMuted'),
 ('UnsetMuted', lambda : 'Messenger.UsersRoster.UnsetMuted'),
 ('UsersTransfer', lambda : 'Messenger.UsersRoster.UsersTransfer'),
 ('RemoveFromFriends', lambda : 'Messenger.UsersRoster.RemoveFromFriends'),
 ('AddToIgnored', lambda : 'Messenger.UsersRoster.AddToIgnored'),
 ('RemoveFromIgnored', lambda : 'Messenger.UsersRoster.RemoveFromIgnored'),
 ('CreatePrivateChannel', lambda : 'Messenger.UsersRoster.CreatePrivateChannel'),
 ('RequestRosterValue', lambda : 'Messenger.UsersRoster.RequestRosterValue'),
 ('DenunciationInsult', lambda : 'Messenger.UsersRoster.AppealOffend'),
 ('DenunciationNotFairPlay', lambda : 'Messenger.UsersRoster.AppealNotFairPlay'),
 ('DenunciationTeamKill', lambda : 'Messenger.UsersRoster.AppealTeamkill'),
 ('DenunciationBot', lambda : 'Messenger.UsersRoster.AppealBot')], instance=enumerations.CallabbleEnumItem)
SCH_COMMANDS = enumerations.Enumeration('Service channel commands', [('RequestMessageHistory', lambda : 'Messenger.ServiceChannel.RequestMessageHistory'),
 ('RequestUnreadMessages', lambda : 'Messenger.ServiceChannel.RequestUnreadMessages'),
 ('ClearUnreadMessagesCount', lambda : 'Messenger.ServiceChannel.ClearUnreadMessagesCount'),
 ('ReceiveServerMessage', lambda : 'Messenger.ServiceChannel.ReceiveServerMessage'),
 ('ReceiveClientMessage', lambda : 'Messenger.ServiceChannel.ReceiveClientMessage'),
 ('ClearData', lambda : 'Messenger.ServiceChannel.ClearData')], instance=enumerations.CallabbleEnumItem)
INV_COMMANDS = enumerations.Enumeration('Invite commands', [('GetInvitePostData', lambda : 'Invites.GetInvitePostData'),
 ('GetReceivedInvite', lambda : 'Invites.GetReceivedInvite'),
 ('CreateInvite', lambda : 'Invites.CreateInvite'),
 ('CreateInviteFailed', lambda : 'Invites.CreateInviteFailed'),
 ('CreateInviteSuccess', lambda : 'Invites.CreateInviteSuccess'),
 ('InitInvites', lambda : 'Invites.InitInvites'),
 ('ReceiveInvites', lambda : 'Invites.ReceiveInvites'),
 ('RequestList', lambda : 'Invites.RequestList'),
 ('RefreshList', lambda : 'Invites.RefreshList'),
 ('AcceptInvite', lambda : 'Invites.AcceptInvite'),
 ('RejectInvite', lambda : 'Invites.RejectInvite'),
 ('InviteActionFailed', lambda : 'Invites.InviteActionFailed'),
 ('MoveToArchive', lambda : 'Invites.MoveToArchive'),
 ('SetInviteRequestID', lambda : 'Invites.SetInviteRequestID'),
 ('LeftPrbAndAcceptInvite', lambda : 'Invites.LeftPrbAndAcceptInvite'),
 ('CloseReceivedInviteWindow', lambda : 'Invites.CloseReceivedInviteWindow'),
 ('RequestUnreadCount', lambda : 'Invites.RequestUnreadCount'),
 ('ClearUnreadCount', lambda : 'Invites.ClearUnreadCount'),
 ('ClearData', lambda : 'Invites.ClearInvitesData'),
 ('DeletedInvites', lambda : 'Invites.DeletedInvites'),
 ('ChangedInvites', lambda : 'Invites.ChangedInvites')], instance=enumerations.CallabbleEnumItem)
SQUAD_PRB_COMMANDS = enumerations.Enumeration('Service channel commands', [('Send', lambda : 'Prebattle.Squad.Invitations.Send'), ('ShowError', lambda : 'Prebattle.Squad.Invitations.ShowError'), ('CloseWindow', lambda : 'Prebattle.Squad.Invitations.CloseWindow')], instance=enumerations.CallabbleEnumItem)
TEAM_PRB_COMMANDS = enumerations.Enumeration('Service channel commands', [('Send', lambda : 'Prebattle.Team.Invitations.Send'), ('ShowError', lambda : 'Prebattle.Team.Invitations.ShowError'), ('CloseWindow', lambda : 'Prebattle.Team.Invitations.CloseWindow')], instance=enumerations.CallabbleEnumItem)
BS_PRB_COMMANDS = enumerations.Enumeration('Service channel commands', [('Send', lambda : 'Prebattle.BS.Invitations.Send'), ('ShowError', lambda : 'Prebattle.BS.Invitations.ShowError'), ('CloseWindow', lambda : 'Prebattle.BS.Invitations.CloseWindow')], instance=enumerations.CallabbleEnumItem)
LAZY_CH_COMMANDS = enumerations.Enumeration('Lazy channel commands', [('RequestJoinToChannel', lambda : 'Messenger.LazyChannel.RequestJoin'),
 ('RequestExitFromChannel', lambda : 'Messenger.LazyChannel.RequestExit'),
 ('IsJoinedToChannel', lambda : 'Messenger.LazyChannel.IsJoined'),
 ('SetJoinedToChannel', lambda : 'Messenger.LazyChannel.SetJoined'),
 ('DataReceived', lambda : 'Messenger.LazyChannel.DataReceived')], instance=enumerations.CallabbleEnumItem)
FAQ_COMMANDS = enumerations.Enumeration('FAQ form commands', [('Get', lambda : 'Messenger.FAQ.Get'), ('Append', lambda : 'Messenger.FAQ.Append')], instance=enumerations.CallabbleEnumItem)
